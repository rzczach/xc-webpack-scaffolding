{
  "_args": [
    [
      {
        "raw": "tiny-invariant@^1.0.2",
        "scope": null,
        "escapedName": "tiny-invariant",
        "name": "tiny-invariant",
        "rawSpec": "^1.0.2",
        "spec": ">=1.0.2 <2.0.0",
        "type": "range"
      },
      "/Users/rzc/xcworld/xc-webpack-scaffolding/node_modules/react-router-dom"
    ]
  ],
  "_cnpm_publish_time": 1553646642789,
  "_from": "tiny-invariant@^1.0.2",
  "_hasShrinkwrap": false,
  "_id": "tiny-invariant@1.0.4",
  "_location": "/tiny-invariant",
  "_nodeVersion": "8.11.3",
  "_npmOperationalInternal": {
    "host": "s3://npm-registry-packages",
    "tmp": "tmp/tiny-invariant_1.0.4_1553646641421_0.23947182555739333"
  },
  "_npmUser": {
    "name": "alexreardon",
    "email": "alexreardon@gmail.com"
  },
  "_npmVersion": "6.1.0",
  "_phantomChildren": {},
  "_requested": {
    "raw": "tiny-invariant@^1.0.2",
    "scope": null,
    "escapedName": "tiny-invariant",
    "name": "tiny-invariant",
    "rawSpec": "^1.0.2",
    "spec": ">=1.0.2 <2.0.0",
    "type": "range"
  },
  "_requiredBy": [
    "/history",
    "/react-router",
    "/react-router-dom"
  ],
  "_resolved": "http://registry.npm.taobao.org/tiny-invariant/download/tiny-invariant-1.0.4.tgz",
  "_shasum": "346b5415fd93cb696b0c4e8a96697ff590f92463",
  "_shrinkwrap": null,
  "_spec": "tiny-invariant@^1.0.2",
  "_where": "/Users/rzc/xcworld/xc-webpack-scaffolding/node_modules/react-router-dom",
  "author": {
    "name": "Alex Reardon",
    "email": "alexreardon@gmail.com"
  },
  "bugs": {
    "url": "https://github.com/alexreardon/tiny-invariant/issues"
  },
  "dependencies": {},
  "description": "A tiny invariant function",
  "devDependencies": {
    "@babel/core": "^7.4.0",
    "@babel/preset-env": "^7.4.2",
    "@babel/preset-flow": "^7.0.0",
    "@babel/runtime-corejs2": "^7.4.2",
    "babel-core": "7.0.0-bridge.0",
    "babel-jest": "^24.5.0",
    "flow-bin": "^0.95.1",
    "jest": "^24.5.0",
    "prettier": "^1.16.4",
    "rimraf": "^2.6.3",
    "rollup": "^1.7.3",
    "rollup-plugin-babel": "^4.3.2",
    "rollup-plugin-replace": "^2.1.1",
    "rollup-plugin-uglify": "^6.0.2"
  },
  "directories": {},
  "dist": {
    "shasum": "346b5415fd93cb696b0c4e8a96697ff590f92463",
    "size": 3705,
    "noattachment": false,
    "tarball": "http://registry.npm.taobao.org/tiny-invariant/download/tiny-invariant-1.0.4.tgz"
  },
  "files": [
    "/dist",
    "/src"
  ],
  "gitHead": "b12d6eb66c7e4726db50c141a12a9bdbd704a382",
  "homepage": "https://github.com/alexreardon/tiny-invariant#readme",
  "keywords": [
    "invariant",
    "error"
  ],
  "license": "MIT",
  "main": "dist/tiny-invariant.cjs.js",
  "maintainers": [
    {
      "name": "alexreardon",
      "email": "alexreardon@gmail.com"
    }
  ],
  "module": "dist/tiny-invariant.esm.js",
  "name": "tiny-invariant",
  "optionalDependencies": {},
  "publish_time": 1553646642789,
  "readme": "# `tiny-invariant` ğŸ”¬ğŸ’¥\n\n[![Build Status](https://travis-ci.org/alexreardon/tiny-invariant.svg?branch=master)](https://travis-ci.org/alexreardon/tiny-invariant)\n[![npm](https://img.shields.io/npm/v/tiny-invariant.svg)](https://www.npmjs.com/package/tiny-invariant) [![dependencies](https://david-dm.org/alexreardon/tiny-invariant.svg)](https://david-dm.org/alexreardon/tiny-invariant)\n[![min](https://img.shields.io/bundlephobia/min/tiny-invariant.svg)](https://www.npmjs.com/package/tiny-invariant)\n[![minzip](https://img.shields.io/bundlephobia/minzip/tiny-invariant.svg)](https://www.npmjs.com/package/tiny-invariant)\n\nA tiny [`invariant`](https://www.npmjs.com/package/invariant) alternative.\n\n## What is `invariant`?\n\nAn `invariant` function tasks a value, and if the value is [falsy](https://github.com/getify/You-Dont-Know-JS/blob/bdbe570600d4e1107d0b131787903ca1c9ec8140/up%20%26%20going/ch2.md#truthy--falsy) then the `invariant` function will throw. If the value is [truthy](https://github.com/getify/You-Dont-Know-JS/blob/bdbe570600d4e1107d0b131787903ca1c9ec8140/up%20%26%20going/ch2.md#truthy--falsy), then the function will not throw.\n\n```js\nimport invariant from 'tiny-invariant';\n\ninvariant(truthyValue, 'This should not throw!');\n\ninvariant(falsyValue, 'This will throw!');\n// Error('Invariant violation: This will throw!');\n```\n\n## Why `tiny-invariant`?\n\nThe [`library: invariant`](https://www.npmjs.com/package/invariant) supports passing in arguments to the `invariant` function in a sprintf style `(condition, format, a, b, c, d, e, f)`. It has internal logic to execute the sprintf substitutions. The sprintf logic is not removed in production builds. `tiny-invariant` has dropped all of the sprintf logic. `tiny-invariant` allows you to pass a single string message. With [template literals](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Template_literals) there is really no need for a custom message formatter to be built into the library. If you need a multi part message you can just do this: `invariant(condition, 'Hello, ${name} - how are you today?')`\n\n## API: `(condition: mixed, message?: string) => void`\n\n- `condition` is required and can be anything\n- `message` is an optional string\n\n## Installation\n\n```bash\n# yarn\nyarn add tiny-invariant\n\n# bash\nnpm add tiny-invariant --save\n```\n\n## Dropping your `message` for kb savings!\n\nWe recommend using [`babel-plugin-dev-expression`](https://www.npmjs.com/package/babel-plugin-dev-expression) to remove the `message` argument from your `invariant` calls in production builds to save kbs!\n\nWhat it does it turn your code that looks like this:\n\n```js\ninvariant(condition, 'My cool message that takes up a lot of kbs');\n```\n\nInto this\n\n```js\nif (!condition) {\n  if ('production' !== process.env.NODE_ENV) {\n    invariant(false, 'My cool message that takes up a lot of kbs');\n  } else {\n    invariant(false);\n  }\n}\n```\n\nYour bundler can then drop the code in the `\"production\" !== process.env.NODE_ENV` block for your production builds\n\nFinal result:\n\n```js\nif (!condition) {\n  invariant(false);\n}\n```\n\n> For `rollup` use [rollup-plugin-replace](https://github.com/rollup/rollup-plugin-replace) and set `NODE_ENV` to `production` and then `rollup` will treeshake out the unused code\n>\n> [`Webpack` instructions](https://webpack.js.org/guides/production/#specify-the-mode)\n\n## Builds\n\n- We have a `es` (EcmaScript module) build (because you _know_ you want to deduplicate this super heavy library)\n- We have a `cjs` (CommonJS) build\n- We have a `umd` (Universal module definition) build in case you needed it\n\nWe expect `process.env.NODE_ENV` to be available at module compilation. We cache this value\n\n## That's it!\n\nğŸ¤˜\n",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git+https://github.com/alexreardon/tiny-invariant.git"
  },
  "scripts": {
    "build": "yarn build:clean && yarn build:dist && yarn build:flow",
    "build:clean": "rimraf dist",
    "build:dist": "yarn rollup --config rollup.config.js",
    "build:flow": "echo \"// @flow\n\nexport * from '../src';\" > dist/tiny-invariant.cjs.js.flow",
    "lint": "yarn prettier --debug-check src/** test/**",
    "prepublishOnly": "yarn build",
    "test": "yarn jest",
    "typecheck": "yarn flow",
    "validate": "yarn lint && yarn flow"
  },
  "sideEffects": false,
  "types": "src/index.d.ts",
  "version": "1.0.4"
}

{
  "_args": [
    [
      {
        "raw": "p-try@^2.0.0",
        "scope": null,
        "escapedName": "p-try",
        "name": "p-try",
        "rawSpec": "^2.0.0",
        "spec": ">=2.0.0 <3.0.0",
        "type": "range"
      },
      "/Users/rzc/xcworld/xc-webpack-scaffolding/node_modules/p-limit"
    ]
  ],
  "_cnpm_publish_time": 1554035675198,
  "_from": "p-try@^2.0.0",
  "_hasShrinkwrap": false,
  "_id": "p-try@2.2.0",
  "_location": "/p-try",
  "_nodeVersion": "8.15.0",
  "_npmOperationalInternal": {
    "host": "s3://npm-registry-packages",
    "tmp": "tmp/p-try_2.2.0_1554035674934_0.5387262637396022"
  },
  "_npmUser": {
    "name": "sindresorhus",
    "email": "sindresorhus@gmail.com"
  },
  "_npmVersion": "6.9.0",
  "_phantomChildren": {},
  "_requested": {
    "raw": "p-try@^2.0.0",
    "scope": null,
    "escapedName": "p-try",
    "name": "p-try",
    "rawSpec": "^2.0.0",
    "spec": ">=2.0.0 <3.0.0",
    "type": "range"
  },
  "_requiredBy": [
    "/p-limit"
  ],
  "_resolved": "http://registry.npm.taobao.org/p-try/download/p-try-2.2.0.tgz",
  "_shasum": "cb2868540e313d61de58fafbe35ce9004d5540e6",
  "_shrinkwrap": null,
  "_spec": "p-try@^2.0.0",
  "_where": "/Users/rzc/xcworld/xc-webpack-scaffolding/node_modules/p-limit",
  "author": {
    "name": "Sindre Sorhus",
    "email": "sindresorhus@gmail.com",
    "url": "sindresorhus.com"
  },
  "bugs": {
    "url": "https://github.com/sindresorhus/p-try/issues"
  },
  "dependencies": {},
  "description": "`Start a promise chain",
  "devDependencies": {
    "ava": "^1.4.1",
    "tsd": "^0.7.1",
    "xo": "^0.24.0"
  },
  "directories": {},
  "dist": {
    "shasum": "cb2868540e313d61de58fafbe35ce9004d5540e6",
    "size": 2194,
    "noattachment": false,
    "tarball": "http://registry.npm.taobao.org/p-try/download/p-try-2.2.0.tgz"
  },
  "engines": {
    "node": ">=6"
  },
  "files": [
    "index.js",
    "index.d.ts"
  ],
  "gitHead": "e80e2e130b2d16807345be02aa03541e6e085952",
  "homepage": "https://github.com/sindresorhus/p-try#readme",
  "keywords": [
    "promise",
    "try",
    "resolve",
    "function",
    "catch",
    "async",
    "await",
    "promises",
    "settled",
    "ponyfill",
    "polyfill",
    "shim",
    "bluebird"
  ],
  "license": "MIT",
  "maintainers": [
    {
      "name": "sindresorhus",
      "email": "sindresorhus@gmail.com"
    }
  ],
  "name": "p-try",
  "optionalDependencies": {},
  "publish_time": 1554035675198,
  "readme": "# p-try [![Build Status](https://travis-ci.org/sindresorhus/p-try.svg?branch=master)](https://travis-ci.org/sindresorhus/p-try)\n\n> Start a promise chain\n\n[How is it useful?](http://cryto.net/~joepie91/blog/2016/05/11/what-is-promise-try-and-why-does-it-matter/)\n\n\n## Install\n\n```\n$ npm install p-try\n```\n\n\n## Usage\n\n```js\nconst pTry = require('p-try');\n\n(async () => {\n\ttry {\n\t\tconst value = await pTry(() => {\n\t\t\treturn synchronousFunctionThatMightThrow();\n\t\t});\n\t\tconsole.log(value);\n\t} catch (error) {\n\t\tconsole.error(error);\n\t}\n})();\n```\n\n\n## API\n\n### pTry(fn, ...arguments)\n\nReturns a `Promise` resolved with the value of calling `fn(...arguments)`. If the function throws an error, the returned `Promise` will be rejected with that error.\n\nSupport for passing arguments on to the `fn` is provided in order to be able to avoid creating unnecessary closures. You probably don't need this optimization unless you're pushing a *lot* of functions.\n\n#### fn\n\nThe function to run to start the promise chain.\n\n#### arguments\n\nArguments to pass to `fn`.\n\n\n## Related\n\n- [p-finally](https://github.com/sindresorhus/p-finally) - `Promise#finally()` ponyfill - Invoked when the promise is settled regardless of outcome\n- [More…](https://github.com/sindresorhus/promise-fun)\n\n\n## License\n\nMIT © [Sindre Sorhus](https://sindresorhus.com)\n",
  "readmeFilename": "readme.md",
  "repository": {
    "type": "git",
    "url": "git+https://github.com/sindresorhus/p-try.git"
  },
  "scripts": {
    "test": "xo && ava && tsd"
  },
  "version": "2.2.0"
}

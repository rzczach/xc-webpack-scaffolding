{
  "_args": [
    [
      {
        "raw": "mobx",
        "scope": null,
        "escapedName": "mobx",
        "name": "mobx",
        "rawSpec": "",
        "spec": "latest",
        "type": "tag"
      },
      "/Users/rzc/xcworld/xc-webpack-scaffolding"
    ]
  ],
  "_cnpm_publish_time": 1553938794371,
  "_from": "mobx",
  "_hasShrinkwrap": false,
  "_id": "mobx@5.9.4",
  "_location": "/mobx",
  "_nodeVersion": "10.15.1",
  "_npmOperationalInternal": {
    "host": "s3://npm-registry-packages",
    "tmp": "tmp/mobx_5.9.4_1553938794125_0.6586674496416567"
  },
  "_npmUser": {
    "name": "mweststrate",
    "email": "mweststrate@gmail.com"
  },
  "_npmVersion": "6.4.1",
  "_phantomChildren": {},
  "_requested": {
    "raw": "mobx",
    "scope": null,
    "escapedName": "mobx",
    "name": "mobx",
    "rawSpec": "",
    "spec": "latest",
    "type": "tag"
  },
  "_requiredBy": [
    "#USER",
    "/"
  ],
  "_resolved": "http://registry.npm.taobao.org/mobx/download/mobx-5.9.4.tgz",
  "_shasum": "1dee92aba33f67b7baeeb679e3bd376a12e55812",
  "_shrinkwrap": null,
  "_spec": "mobx",
  "_where": "/Users/rzc/xcworld/xc-webpack-scaffolding",
  "author": {
    "name": "Michel Weststrate"
  },
  "browser": {
    "./lib/mobx.js": "./lib/mobx.js",
    "./lib/mobx.module.js": "./lib/mobx.module.js"
  },
  "bugs": {
    "url": "https://github.com/mobxjs/mobx/issues"
  },
  "dependencies": {},
  "description": "Simple, scalable state management.",
  "devDependencies": {
    "@babel/core": "^7.1.0",
    "@babel/plugin-proposal-class-properties": "^7.1.0",
    "@babel/plugin-proposal-decorators": "^7.1.0",
    "@babel/preset-env": "^7.1.0",
    "@types/jest": "^21.1.9",
    "@types/node": "^7.0.22",
    "@typescript-eslint/eslint-plugin": "^1.3.0",
    "babel-core": "^7.0.0-bridge.0",
    "babel-jest": "^23.6.0",
    "browserify": "^12.0.1",
    "chalk": "^1.1.3",
    "coveralls": "^2.11.4",
    "envify": "^4.1.0",
    "eslint": "^5.13.0",
    "flow-bin": "^0.59.0",
    "fs-extra": "^3.0.1",
    "husky": "^0.14.3",
    "iterall": "^1.0.2",
    "jest": "^23.6.0",
    "lint-staged": "^3.6.1",
    "lodash.intersection": "^3.2.0",
    "ncp": "^2.0.0",
    "prettier": "^1.4.4",
    "regenerator-runtime": "^0.11.1",
    "rollup": "^0.41.6",
    "rollup-plugin-filesize": "^1.3.2",
    "rollup-plugin-node-resolve": "^3.0.0",
    "serializr": "^1.3.0",
    "shelljs": "^0.8.2",
    "size-limit": "^0.2.0",
    "tape": "^4.2.2",
    "ts-jest": "^22.0.0",
    "tslib": "^1.7.1",
    "typescript": "^3.2.1",
    "uglify-es": "^3.3.9"
  },
  "directories": {},
  "dist": {
    "shasum": "1dee92aba33f67b7baeeb679e3bd376a12e55812",
    "size": 294309,
    "noattachment": false,
    "tarball": "http://registry.npm.taobao.org/mobx/download/mobx-5.9.4.tgz"
  },
  "files": [
    "lib",
    "LICENSE"
  ],
  "gitHead": "9e6c6fa1715d31b041571532be0ff8c9a2500933",
  "homepage": "https://mobx.js.org/",
  "jest": {
    "transform": {
      "^.+\\.tsx?$": "ts-jest",
      "^.+\\.jsx?$": "babel-jest"
    },
    "testRegex": "test/base/.*\\.(t|j)sx?$",
    "moduleFileExtensions": [
      "ts",
      "tsx",
      "js",
      "jsx",
      "json"
    ],
    "testPathIgnorePatterns": [
      "/node_modules/",
      "/\\./"
    ],
    "watchPathIgnorePatterns": [
      "<rootDir>/node_modules/"
    ]
  },
  "jsnext:main": "lib/mobx.module.js",
  "keywords": [
    "mobx",
    "mobservable",
    "observable",
    "react-component",
    "react",
    "reactjs",
    "reactive",
    "model",
    "frp",
    "functional-reactive-programming",
    "state management",
    "data flow"
  ],
  "license": "MIT",
  "lint-staged": {
    "*.{ts,tsx,js,jsx}": [
      "prettier --write --print-width 100 --tab-width 4 --no-semi",
      "git add"
    ]
  },
  "main": "lib/mobx.js",
  "maintainers": [
    {
      "name": "andykog",
      "email": "mail@andykog.com"
    },
    {
      "name": "capaj",
      "email": "capajj@gmail.com"
    },
    {
      "name": "mweststrate",
      "email": "mweststrate@gmail.com"
    },
    {
      "name": "xaviergonz",
      "email": "xaviergonz@gmail.com"
    }
  ],
  "module": "lib/mobx.module.js",
  "name": "mobx",
  "optionalDependencies": {},
  "publish_time": 1553938794371,
  "react-native": "lib/mobx.module.js",
  "readme": "<img src=\"docs/mobx.png\" alt=\"logo\" height=\"120\" align=\"right\" />\n\n# MobX\n\n_Simple, scalable state management_\n\n[![Build Status](https://travis-ci.org/mobxjs/mobx.svg?branch=master)](https://travis-ci.org/mobxjs/mobx)\n[![Coverage Status](https://coveralls.io/repos/mobxjs/mobx/badge.svg?branch=master&service=github)](https://coveralls.io/github/mobxjs/mobx?branch=master)\n[![Join the chat at https://gitter.im/mobxjs/mobx](https://badges.gitter.im/Join%20Chat.svg)](https://gitter.im/mobxjs/mobx?utm_source=badge&utm_medium=badge&utm_campaign=pr-badge&utm_content=badge)\n[![Discuss MobX on Hashnode](https://hashnode.github.io/badges/mobx.svg)](https://hashnode.com/n/mobx)\n[![OpenCollective](https://opencollective.com/mobx/backers/badge.svg)](#backers)\n[![OpenCollective](https://opencollective.com/mobx/sponsors/badge.svg)](#sponsors)\n[![code style: prettier](https://img.shields.io/badge/code_style-prettier-ff69b4.svg)](https://github.com/prettier/prettier)\n\nMobX is proudly sponsored by Mendix, Coinbase, Facebook Open Source, Canva, Algolia, Guilded, Auction Frontier, Mantro and TalentPlot for 100$/month or more! And beyond that by many [individual backers](#backers) and through [one time contributions](https://github.com/mobxjs/mobx/blob/master/sponsors.md).\n\n<a href=\"https://mendix.com/\"><img src=\"docs/mendix-logo.png\" align=\"center\" width=\"100\" title=\"Mendix\" alt=\"Mendix\" /></a>\n<a href=\"https://coinbase.com/\"><img src=\"docs/coinbase.jpeg\" align=\"center\" width=\"100\" title=\"Coinbase\" alt=\"Coinbase\" /></a>\n<a href=\"https://opensource.facebook.com/\"><img src=\"docs/fbos.jpeg\" align=\"center\" width=\"100\" title=\"Facebook Open Source\" alt=\"Facebook Open Source\" /></a>\n<a href=\"https://www.canva.com/\"><img src=\"docs/canva.png\" align=\"center\" width=\"100\" title=\"Canva\" alt=\"Canva\" /></a>\n<a href=\"https://www.algolia.com/\"><img src=\"docs/algolia.jpg\" align=\"center\" width=\"100\" title=\"Algolia\" alt=\"Algolia\" /></a>\n<a href=\"https://www.guilded.gg/\"><img src=\"docs/guilded.jpg\" align=\"center\" width=\"100\" title=\"Guilded\" alt=\"Guilded\" /></a>\n<a href=\"http://auctionfrontier.com/\"><img src=\"docs/auctionfrontier.jpeg\" align=\"center\" width=\"100\" title=\"Auction Frontier\" alt=\"Auction Frontier\"></a>\n<a href=\"https://mantro.net/jobs/warlock\"><img src=\"docs/mantro.png\" align=\"center\" width=\"100\" title=\"mantro GmbH\" alt=\"mantro GmbH\"></a>\n<a href=\"https://talentplot.com/\"><img src=\"docs/talentplot.png\" align=\"center\" width=\"100\" title=\"talentplot\" alt=\"talentplot\"></a>\n<a href=\"https://www.codefirst.co.uk/\"><img src=\"https://mobx.js.org/docs/codefirst.png\" align=\"center\" width=\"100\" title=\"CodeFirst\" alt=\"CodeFirst\"/></a>\n\n# Installation\n\n* Installation: `npm install mobx --save`. React bindings: `npm install mobx-react --save`. To enable ESNext decorators (optional), see below.\n* CDN:\n   * https://unpkg.com/mobx/lib/mobx.umd.js\n   * https://cdnjs.com/libraries/mobx\n\n\n_Tip: Consider using the faster and smaller ES6 build if targetting a modern environment: `lib/mobx.es6.js`. For example by setting up a webpack alias: `resolve: { alias: { mobx: __dirname + \"/node_modules/mobx/lib/mobx.es6.js\" }}`_\n\n# Browser support\n\n| MobX version | Actively supported  | Supported browsers | GitHub branch |\n| ----- | ----- | --- | --- |\n| 5.* | Yes | Any browser that supports [ES6 Proxies](https://kangax.github.io/compat-table/es6/#test-Proxy) (non polyfillable). _NOT:_ IE 11 and lower, Node 5 and lower, Google's crawler bot | `master` |\n| 4.* | Yes (LTS) | Any ES5 compliant browser | `mobx4-master` |\n| 1-3.* | No |  Any ES5 compliant browser | No active branch |\n\n* MobX >=5 runs on any browser with [ES6 proxy support](https://kangax.github.io/compat-table/es6/#test-Proxy). It will throw an error on startup on older environments such as IE11, Node.js <6 or React Native Android on old JavaScriptCore [how-to-upgrade](https://github.com/react-community/jsc-android-buildscripts#how-to-use-it-with-my-react-native-app). _Warning: since upgrading JSC is non-trivial, and decorators can be [troublesome](https://github.com/mobxjs/mobx/issues/1777) as well in React Native, for now it is recommended to stick to MobX 4.x for React Native Android development_.\n* MobX 4 runs on any ES5 browser and will be actively maintained. The MobX 4 and 5 api's are the same and semantically can achieve the same, but MobX 4 has some [limitations](#mobx-4-vs-mobx-5).\n\n\n## Translations\n\n* [中文](http://cn.mobx.js.org)\n\n## Getting started\n\n* <i><a style=\"color: white; background:green;padding:5px;margin:5px;border-radius:2px\" href=\"https://egghead.io/courses/manage-complex-state-in-react-apps-with-mobx\">Egghead.io course</a></i>\n* [Ten minute, interactive MobX + React tutorial](https://mobxjs.github.io/mobx/getting-started.html)\n* <img src=\"docs/book.jpg\" height=\"80px\"/> [The MobX book](https://books.google.nl/books?id=ALFmDwAAQBAJ&pg=PP1&lpg=PP1&dq=michel+weststrate+mobx+quick+start+guide:+supercharge+the+client+state+in+your+react+apps+with+mobx&source=bl&ots=D460fxti0F&sig=ivDGTxsPNwlOjLHrpKF1nweZFl8&hl=nl&sa=X&ved=2ahUKEwiwl8XO--ncAhWPmbQKHWOYBqIQ6AEwAnoECAkQAQ#v=onepage&q=michel%20weststrate%20mobx%20quick%20start%20guide%3A%20supercharge%20the%20client%20state%20in%20your%20react%20apps%20with%20mobx&f=false) by Pavan Podila and Michel Weststrate (which despite it's name is in-depth!)\n* [Official MobX 4 documentation and API overview](https://mobxjs.github.io/mobx/refguide/api.html) ([MobX 3](https://github.com/mobxjs/mobx/blob/54557dc319b04e92e31cb87427bef194ec1c549c/docs/refguide/api.md), [MobX 2](https://github.com/mobxjs/mobx/blob/7c9e7c86e0c6ead141bb0539d33143d0e1f576dd/docs/refguide/api.md))\n* [How to (not) use decorators](https://mobx.js.org/best/decorators.html)\n* Videos:\n  * [ReactNext 2016: Real World MobX](https://www.youtube.com/watch?v=Aws40KOx90U) - 40m [slides](https://docs.google.com/presentation/d/1DrI6Hc2xIPTLBkfNH8YczOcPXQTOaCIcDESdyVfG_bE/edit?usp=sharing)\n  * [Practical React with MobX](https://www.youtube.com/watch?v=XGwuM_u7UeQ). In depth introduction and explanation to MobX and React by Matt Ruby on OpenSourceNorth (ES5 only) - 42m.\n  * LearnCode.academy MobX tutorial [Part I: MobX + React is AWESOME (7m)](https://www.youtube.com/watch?v=_q50BXqkAfI) [Part II: Computed Values and Nested/Referenced Observables (12m.)](https://www.youtube.com/watch?v=nYvNqKrl69s)\n  * [Screencast: intro to MobX](https://www.youtube.com/watch?v=K8dr8BMU7-8) - 8m\n  * [Talk: State Management Is Easy, React Amsterdam 2016 conf](https://www.youtube.com/watch?v=ApmSsu3qnf0&feature=youtu.be) ([slides](https://speakerdeck.com/mweststrate/state-management-is-easy-introduction-to-mobx))\n* [Boilerplates and related projects](http://mobxjs.github.io/mobx/faq/boilerplates.html)\n* More tutorials, blogs, videos, and other helpful resources can be found on the [MobX awesome list](https://github.com/mobxjs/awesome-mobx#awesome-mobx)\n\n\n## Introduction\n\nMobX is a battle tested, simple and scalable state management library transparently applying functional reactive programming (TFRP). The Mobx design principle is very simple:\n\n_Anything that can be derived from the application state, should be derived. Automatically._\n\nThis includes the UI, data serialization, server communication, etc.\n\n<img alt=\"MobX unidirectional flow\" src=\"docs/flow.png\" align=\"center\" />\n\nReact and MobX together are a powerful combination. React renders the application state by providing mechanisms to translate it into a tree of renderable components. MobX provides the mechanism to store and update the application state that React then uses.\n\nBoth React and MobX provide optimal and unique solutions to common problems in application development. React provides mechanisms to optimally render the UI by using a virtual DOM that reduces the number of costly DOM mutations. MobX provides mechanisms to optimally synchronize application state with React components by using a reactive virtual dependency state graph that is only updated when strictly needed and is never stale.\n\n## Core concepts\n\nMobX has only a few core concepts. The following snippets can be tried online using [codesandbox example](https://codesandbox.io/s/v3v0my2370).\n\n### Observable state\n\n<i><a style=\"color: white; background:green;padding:5px;margin:5px;border-radius:2px\" href=\"https://egghead.io/lessons/javascript-sync-the-ui-with-the-app-state-using-mobx-observable-and-observer-in-react\">Egghead.io lesson 1: observable & observer</a></i>\n\nMobX adds observable capabilities to existing data structures like objects, arrays and class instances.\nThis can simply be done by annotating your class properties with the [@observable](http://mobxjs.github.io/mobx/refguide/observable-decorator.html) decorator (ES.Next).\n\n```javascript\nimport { observable } from 'mobx';\n\nclass Todo {\n    id = Math.random();\n    @observable title = '';\n    @observable finished = false;\n}\n```\n\nUsing `observable` is like turning a property of an object into a spreadsheet cell.\nBut, unlike spreadsheets, these values can be not only primitive values, but also references, objects and arrays.\n\nIf your environment doesn't support decorator syntax, don't worry.\nYou can read [here](http://mobxjs.github.io/mobx/best/decorators.html) about how to set them up.\nOr you can skip them altoghether, as MobX can be used fine without decorator _syntax_, by leveraging the _decorate_ utility.\nMany MobX users prefer the slightly more concise decorator syntax, but the following snippet achieves the same:\n\n```javascript\nimport { decorate, observable } from 'mobx';\n\nclass Todo {\n    id = Math.random();\n    title = '';\n    finished = false;\n}\ndecorate(Todo, {\n    title: observable,\n    finished: observable\n})\n```\n\n### Computed values\n\n<i><a style=\"color: white; background:green;padding:5px;margin:5px;border-radius:2px\" href=\"https://egghead.io/lessons/javascript-derive-computed-values-and-manage-side-effects-with-mobx-reactions\">Egghead.io lesson 3: computed values</a></i>\n\nWith MobX you can define values that will be derived automatically when relevant data is modified.\nBy using the [`@computed`](http://mobxjs.github.io/mobx/refguide/computed-decorator.html) decorator or by using getter / setter functions when using `(extend)Observable` (Of course, you can use `decorate` here again as alternative to the `@` syntax).\n\n```javascript\nclass TodoList {\n    @observable todos = [];\n    @computed get unfinishedTodoCount() {\n        return this.todos.filter(todo => !todo.finished).length;\n    }\n}\n```\n\nMobX will ensure that `unfinishedTodoCount` is updated automatically when a todo is added or when one of the `finished` properties is modified.\nComputations like these resemble formulas in spreadsheet programs like MS Excel. They update automatically and only when required.\n\n### Reactions\n\n<i><a style=\"color: white; background:green;padding:5px;margin:5px;border-radius:2px\" href=\"https://egghead.io/lessons/react-write-custom-mobx-reactions-with-when-and-autorun\">Egghead.io lesson 9: custom reactions</a></i>\n\nReactions are similar to a computed value, but instead of producing a new value, a reaction produces a side effect for things like printing to the console, making network requests, incrementally updating the React component tree to patch the DOM, etc.\nIn short, reactions bridge [reactive](https://en.wikipedia.org/wiki/Reactive_programming) and [imperative](https://en.wikipedia.org/wiki/Imperative_programming) programming.\n\n#### React components\n\n<i><a style=\"color: white; background:green;padding:5px;margin:5px;border-radius:2px\" href=\"https://egghead.io/courses/manage-complex-state-in-react-apps-with-mobx\">Egghead.io lesson 1: observable & observer</a></i>\n\nIf you are using React, you can turn your (stateless function) components into reactive components by simply adding the [`observer`](http://mobxjs.github.io/mobx/refguide/observer-component.html) function / decorator from the `mobx-react` package onto them.\n\n```javascript\nimport React, {Component} from 'react';\nimport ReactDOM from 'react-dom';\nimport {observer} from 'mobx-react';\n\n@observer\nclass TodoListView extends Component {\n    render() {\n        return <div>\n            <ul>\n                {this.props.todoList.todos.map(todo =>\n                    <TodoView todo={todo} key={todo.id} />\n                )}\n            </ul>\n            Tasks left: {this.props.todoList.unfinishedTodoCount}\n        </div>\n    }\n}\n\nconst TodoView = observer(({todo}) =>\n    <li>\n        <input\n            type='checkbox'\n            checked={todo.finished}\n            onClick={() => todo.finished = !todo.finished}\n        />{todo.title}\n    </li>\n)\n\nconst store = new TodoList();\nReactDOM.render(<TodoListView todoList={store} />, document.getElementById('mount'));\n```\n\n`observer` turns React (function) components into derivations of the data they render.\nWhen using MobX there are no smart or dumb components.\nAll components render smartly but are defined in a dumb manner. MobX will simply make sure the components are always re-rendered whenever needed, but also no more than that. So the `onClick` handler in the above example will force the proper `TodoView` to render, and it will cause the `TodoListView` to render if the number of unfinished tasks has changed.\nHowever, if you would remove the `Tasks left` line (or put it into a separate component), the `TodoListView` will no longer re-render when ticking a box. You can verify this yourself by changing the [JSFiddle](https://jsfiddle.net/mweststrate/wv3yopo0/).\n\n#### Custom reactions\nCustom reactions can simply be created using the [`autorun`](http://mobxjs.github.io/mobx/refguide/autorun.html),\n[`reaction`](http://mobxjs.github.io/mobx/refguide/reaction.html) or [`when`](http://mobxjs.github.io/mobx/refguide/when.html) functions to fit your specific situations.\n\nFor example the following `autorun` prints a log message each time the amount of `unfinishedTodoCount` changes:\n\n```javascript\nautorun(() => {\n    console.log(`Tasks left: ${ todos.unfinishedTodoCount }`)\n})\n```\n\n### What will MobX react to?\n\nWhy does a new message get printed each time the `unfinishedTodoCount` is changed? The answer is this rule of thumb:\n\n_MobX reacts to any existing observable property that is read during the execution of a tracked function._\n\nFor an in-depth explanation about how MobX determines to which observables needs to be reacted, check [understanding what MobX reacts to](https://github.com/mobxjs/mobx/blob/gh-pages/docs/best/react.md).\n\n### Actions\n\n<i><a style=\"color: white; background:green;padding:5px;margin:5px;border-radius:2px\" href=\"https://egghead.io/lessons/react-use-mobx-actions-to-change-and-guard-state\">Egghead.io lesson 5: actions</a></i>\n\nUnlike many flux frameworks, MobX is unopinionated about how user events should be handled.\n\n* This can be done in a Flux like manner.\n* Or by processing events using RxJS.\n* Or by simply handling events in the most straightforward way possible, as demonstrated in the above `onClick` handler.\n\nIn the end it all boils down to: somehow the state should be updated.\n\nAfter updating the state `MobX` will take care of the rest in an efficient, glitch-free manner. So, simple statements, like the ones below, are enough to automatically update the user interface.\n\nThere is no technical need for firing events, calling a dispatcher, etc. A React component in the end is nothing more than a fancy representation of your state, i.e. a derivation that will be managed by MobX.\n\n```javascript\nstore.todos.push(\n    new Todo('Get Coffee'),\n    new Todo('Write simpler code')\n);\nstore.todos[0].finished = true;\n```\n\nNonetheless, MobX has an optional built-in concept of [`actions`](https://mobxjs.github.io/mobx/refguide/action.html).\nRead this section as well if you want to know more about writing asynchronous actions. It's easy!\nUse them to your advantage; they will help you to structure your code better and make wise decisions about when and where state should be modified.\n\n## MobX: Simple and scalable\n\nMobX is a simple, very scaleable and unobtrusive state management library.\n\n### Using classes and real references\n\nWith MobX you don't need to normalize your data. This makes the library very suitable for very complex domain models. (At Mendix, for example, there are ~500 different domain classes in a single application.)\n\n### Referential integrity is guaranteed\n\nSince data doesn't need to be normalized and MobX automatically tracks the relations between state and derivations, you get referential integrity for free.\n\nRendering something that is accessed through three levels of indirection? No problem. MobX will track them and re-render whenever one of the references changes. As a result, staleness bugs are eliminated. As a programmer, you might forget that changing some data might influence a seemingly unrelated component, but MobX won't forget.\n\n### Simpler actions are easier to maintain\n\nAs demonstrated above, modifying state when using MobX is very straightforward. You simply write down your intentions. MobX will take care of the rest.\n\n### Fine grained observability is efficient\n\nMobX builds a graph of all the derivations in your application to find the least number of re-computations that are needed to prevent staleness. \"Derive everything\" might sound expensive, but MobX builds a virtual derivation graph to minimize the number of recomputations needed to keep derivations in sync with the state.\n\nIn fact, when testing MobX at Mendix we found out that using this library to track the relations in our code is often a lot more efficient than pushing changes through our application by using handwritten events or \"smart\" selector based container components.\n\nThe simple reason is that MobX will establish far more fine grained 'listeners' on your data than you would do as a programmer.\n\nSecondly, MobX sees the causality between derivations, so it can order them in such a way that no derivation has to run twice or introduce a glitch.\n\nHow that works? See this [in-depth explanation of MobX](https://medium.com/@mweststrate/becoming-fully-reactive-an-in-depth-explanation-of-mobservable-55995262a254).\n\n### Easy interoperability\n\nMobX works with plain JavaScript structures. Due to its unobtrusiveness, it works with most JavaScript libraries out of the box without needing MobX specific library add-ons.\n\nSo, you can simply keep using your existing router, data fetching, and utility libraries like `react-router`, `director`, `superagent`, `lodash`, etc.\n\nFor the same reason, you can use it with both server and client side, isomorphic and react-native applications.\n\nThe result of this is that you often need to learn fewer new concepts when using MobX in comparison to other state management solutions.\n\n---\n\n## Credits\n\nMobX is inspired by reactive programming principles found in spreadsheets. It is inspired by MVVM frameworks such as MeteorJS tracker, Knockout and Vue.js. But, MobX brings Transparent Functional Reactive Programming to the next level and provides a stand alone implementation. It implements TFRP in a glitch-free, synchronous, predictable and efficient manner.\n\nA ton of credit goes to [Mendix](https://github.com/mendix) for providing the flexibility and support to maintain MobX and the chance to prove the philosophy of MobX in real, complex, performance critical applications.\n\nAnd finally, kudos to all the people that believed in, tried, validated and even [sponsored](https://github.com/mobxjs/mobx/blob/master/sponsors.md) MobX.\n\n## Further resources and documentation\n\n* <img src=\"docs/book.jpg\" height=\"80px\"/> [The MobX book](https://books.google.nl/books?id=ALFmDwAAQBAJ&pg=PP1&lpg=PP1&dq=michel+weststrate+mobx+quick+start+guide:+supercharge+the+client+state+in+your+react+apps+with+mobx&source=bl&ots=D460fxti0F&sig=ivDGTxsPNwlOjLHrpKF1nweZFl8&hl=nl&sa=X&ved=2ahUKEwiwl8XO--ncAhWPmbQKHWOYBqIQ6AEwAnoECAkQAQ#v=onepage&q=michel%20weststrate%20mobx%20quick%20start%20guide%3A%20supercharge%20the%20client%20state%20in%20your%20react%20apps%20with%20mobx&f=false) by Pavan Podila and Michel Weststrate (which despite it's name is in-depth!)\n* [MobX homepage](http://mobxjs.github.io/mobx/faq/blogs.html)\n* [API overview](http://mobxjs.github.io/mobx/refguide/api.html)\n* [Tutorials, Blogs & Videos](http://mobxjs.github.io/mobx/faq/blogs.html)\n* [Boilerplates](http://mobxjs.github.io/mobx/faq/boilerplates.html)\n* [Related projects](http://mobxjs.github.io/mobx/faq/related.html)\n\n\n## What others are saying...\n\n> Guise, #mobx isn't pubsub, or your grandpa's observer pattern. Nay, it is a carefully orchestrated observable dimensional portal fueled by the power cosmic. It doesn't do change detection, it's actually a level 20 psionic with soul knife, slashing your viewmodel into submission.\n\n> After using #mobx for lone projects for a few weeks, it feels awesome to introduce it to the team. Time: 1/2, Fun: 2X\n\n> Working with #mobx is basically a continuous loop of me going “this is way too simple, it definitely won’t work” only to be proven wrong\n\n> Try react-mobx with es6 and you will love it so much that you will hug someone.\n\n> I have built big apps with MobX already and comparing to the one before that which was using Redux, it is simpler to read and much easier to reason about.\n\n> The #mobx is the way I always want things to be! It's really surprising simple and fast! Totally awesome! Don't miss it!\n\n> I've been using MobX for over 2 years now, and it *still* feels like cheating! 😎\n\n## Contributing\n\n* Feel free to send small pull requests. Please discuss new features or big changes in a GitHub issue first.\n* Use `yarn test` to run the basic test suite.\n* Use `yarn test:travis` for the test suite with coverage.\n* and `yarn test:performance` for the performance tests.\n* Please note that if you want to backport a feature / fix to MobX 4 a second PR needs to be opened to the mobx4-master branch.\n\n# MobX 4 vs MobX 5\n\nThe difference between MobX 4 and MobX 5 is that the latter uses Proxies to do property tracking. As a consequence, MobX 5 runs only on Proxy supporting browsers, in contrast to MobX 4 that runs on any ES 5 environment.\n\nThe most noteable limitations of MobX 4:\n  * Observable arrays are not real arrays, so they won't pass the `Array.isArray()` check. The practical consequence is that you often need to `.slice()` the array first (to get a real array shallow copy) before passing to third party libraries.\n  * Adding properties to existing observable objects after creation is not automatically picked up. Instead, either use observable maps or use the the built-in [utility functions](https://mobx.js.org/refguide/object-api.html) to read / write / iterate objects that you want to dynamically add properties to.\n\nFor more details see the [caveats page](https://mobx.js.org/best/pitfalls.html).\n\n## Flow support\nMobX ships with [flow typings](flow-typed/mobx.js). Flow will automatically include them when you import MobX modules. Although you **do not** need to import the types explicitly, you can still do it like this: `import type { ... } from 'mobx'`.\n\nTo use the [flow typings](flow-typed/mobx.js) shipped with MobX:\n\n* In `.flowconfig`, you **cannot** ignore `node_modules`.\n* In `.flowconfig`, you **cannot** import it explicitly in the `[libs]` section.\n* You **do not** need to install library definition using [flow-typed](https://github.com/flowtype/flow-typed).\n\n## Donating\n\nWas MobX key in making your project a success?\nJoin our [open collective](https://opencollective.com/mobx#) or use the [donate button](https://mobxjs.github.io/mobx/donate.html)!\n\n### Backers\nSupport us with a monthly donation and help us continue our activities. [[Become a backer](https://opencollective.com/mobx#backer)]\n\n<a href=\"https://opencollective.com/mobx/backer/0/website\" target=\"_blank\"><img src=\"https://opencollective.com/mobx/backer/0/avatar.svg\"></a>\n<a href=\"https://opencollective.com/mobx/backer/1/website\" target=\"_blank\"><img src=\"https://opencollective.com/mobx/backer/1/avatar.svg\"></a>\n<a href=\"https://opencollective.com/mobx/backer/2/website\" target=\"_blank\"><img src=\"https://opencollective.com/mobx/backer/2/avatar.svg\"></a>\n<a href=\"https://opencollective.com/mobx/backer/3/website\" target=\"_blank\"><img src=\"https://opencollective.com/mobx/backer/3/avatar.svg\"></a>\n<a href=\"https://opencollective.com/mobx/backer/4/website\" target=\"_blank\"><img src=\"https://opencollective.com/mobx/backer/4/avatar.svg\"></a>\n<a href=\"https://opencollective.com/mobx/backer/5/website\" target=\"_blank\"><img src=\"https://opencollective.com/mobx/backer/5/avatar.svg\"></a>\n<a href=\"https://opencollective.com/mobx/backer/6/website\" target=\"_blank\"><img src=\"https://opencollective.com/mobx/backer/6/avatar.svg\"></a>\n<a href=\"https://opencollective.com/mobx/backer/7/website\" target=\"_blank\"><img src=\"https://opencollective.com/mobx/backer/7/avatar.svg\"></a>\n<a href=\"https://opencollective.com/mobx/backer/8/website\" target=\"_blank\"><img src=\"https://opencollective.com/mobx/backer/8/avatar.svg\"></a>\n<a href=\"https://opencollective.com/mobx/backer/9/website\" target=\"_blank\"><img src=\"https://opencollective.com/mobx/backer/9/avatar.svg\"></a>\n<a href=\"https://opencollective.com/mobx/backer/10/website\" target=\"_blank\"><img src=\"https://opencollective.com/mobx/backer/10/avatar.svg\"></a>\n<a href=\"https://opencollective.com/mobx/backer/11/website\" target=\"_blank\"><img src=\"https://opencollective.com/mobx/backer/11/avatar.svg\"></a>\n<a href=\"https://opencollective.com/mobx/backer/12/website\" target=\"_blank\"><img src=\"https://opencollective.com/mobx/backer/12/avatar.svg\"></a>\n<a href=\"https://opencollective.com/mobx/backer/13/website\" target=\"_blank\"><img src=\"https://opencollective.com/mobx/backer/13/avatar.svg\"></a>\n<a href=\"https://opencollective.com/mobx/backer/14/website\" target=\"_blank\"><img src=\"https://opencollective.com/mobx/backer/14/avatar.svg\"></a>\n<a href=\"https://opencollective.com/mobx/backer/15/website\" target=\"_blank\"><img src=\"https://opencollective.com/mobx/backer/15/avatar.svg\"></a>\n<a href=\"https://opencollective.com/mobx/backer/16/website\" target=\"_blank\"><img src=\"https://opencollective.com/mobx/backer/16/avatar.svg\"></a>\n<a href=\"https://opencollective.com/mobx/backer/17/website\" target=\"_blank\"><img src=\"https://opencollective.com/mobx/backer/17/avatar.svg\"></a>\n<a href=\"https://opencollective.com/mobx/backer/18/website\" target=\"_blank\"><img src=\"https://opencollective.com/mobx/backer/18/avatar.svg\"></a>\n<a href=\"https://opencollective.com/mobx/backer/19/website\" target=\"_blank\"><img src=\"https://opencollective.com/mobx/backer/19/avatar.svg\"></a>\n<a href=\"https://opencollective.com/mobx/backer/20/website\" target=\"_blank\"><img src=\"https://opencollective.com/mobx/backer/20/avatar.svg\"></a>\n<a href=\"https://opencollective.com/mobx/backer/21/website\" target=\"_blank\"><img src=\"https://opencollective.com/mobx/backer/21/avatar.svg\"></a>\n<a href=\"https://opencollective.com/mobx/backer/22/website\" target=\"_blank\"><img src=\"https://opencollective.com/mobx/backer/22/avatar.svg\"></a>\n<a href=\"https://opencollective.com/mobx/backer/23/website\" target=\"_blank\"><img src=\"https://opencollective.com/mobx/backer/23/avatar.svg\"></a>\n<a href=\"https://opencollective.com/mobx/backer/24/website\" target=\"_blank\"><img src=\"https://opencollective.com/mobx/backer/24/avatar.svg\"></a>\n<a href=\"https://opencollective.com/mobx/backer/25/website\" target=\"_blank\"><img src=\"https://opencollective.com/mobx/backer/25/avatar.svg\"></a>\n<a href=\"https://opencollective.com/mobx/backer/26/website\" target=\"_blank\"><img src=\"https://opencollective.com/mobx/backer/26/avatar.svg\"></a>\n<a href=\"https://opencollective.com/mobx/backer/27/website\" target=\"_blank\"><img src=\"https://opencollective.com/mobx/backer/27/avatar.svg\"></a>\n<a href=\"https://opencollective.com/mobx/backer/28/website\" target=\"_blank\"><img src=\"https://opencollective.com/mobx/backer/28/avatar.svg\"></a>\n<a href=\"https://opencollective.com/mobx/backer/29/website\" target=\"_blank\"><img src=\"https://opencollective.com/mobx/backer/29/avatar.svg\"></a>\n<a href=\"https://opencollective.com/mobx/backer/30/website\" target=\"_blank\"><img src=\"https://opencollective.com/mobx/backer/30/avatar.svg\"></a>\n<a href=\"https://opencollective.com/mobx/backer/31/website\" target=\"_blank\"><img src=\"https://opencollective.com/mobx/backer/31/avatar.svg\"></a>\n<a href=\"https://opencollective.com/mobx/backer/32/website\" target=\"_blank\"><img src=\"https://opencollective.com/mobx/backer/32/avatar.svg\"></a>\n<a href=\"https://opencollective.com/mobx/backer/33/website\" target=\"_blank\"><img src=\"https://opencollective.com/mobx/backer/33/avatar.svg\"></a>\n<a href=\"https://opencollective.com/mobx/backer/34/website\" target=\"_blank\"><img src=\"https://opencollective.com/mobx/backer/34/avatar.svg\"></a>\n<a href=\"https://opencollective.com/mobx/backer/35/website\" target=\"_blank\"><img src=\"https://opencollective.com/mobx/backer/35/avatar.svg\"></a>\n<a href=\"https://opencollective.com/mobx/backer/36/website\" target=\"_blank\"><img src=\"https://opencollective.com/mobx/backer/36/avatar.svg\"></a>\n<a href=\"https://opencollective.com/mobx/backer/37/website\" target=\"_blank\"><img src=\"https://opencollective.com/mobx/backer/37/avatar.svg\"></a>\n<a href=\"https://opencollective.com/mobx/backer/38/website\" target=\"_blank\"><img src=\"https://opencollective.com/mobx/backer/38/avatar.svg\"></a>\n<a href=\"https://opencollective.com/mobx/backer/39/website\" target=\"_blank\"><img src=\"https://opencollective.com/mobx/backer/39/avatar.svg\"></a>\n<a href=\"https://opencollective.com/mobx/backer/40/website\" target=\"_blank\"><img src=\"https://opencollective.com/mobx/backer/40/avatar.svg\"></a>\n<a href=\"https://opencollective.com/mobx/backer/41/website\" target=\"_blank\"><img src=\"https://opencollective.com/mobx/backer/41/avatar.svg\"></a>\n<a href=\"https://opencollective.com/mobx/backer/42/website\" target=\"_blank\"><img src=\"https://opencollective.com/mobx/backer/42/avatar.svg\"></a>\n<a href=\"https://opencollective.com/mobx/backer/43/website\" target=\"_blank\"><img src=\"https://opencollective.com/mobx/backer/43/avatar.svg\"></a>\n<a href=\"https://opencollective.com/mobx/backer/44/website\" target=\"_blank\"><img src=\"https://opencollective.com/mobx/backer/44/avatar.svg\"></a>\n<a href=\"https://opencollective.com/mobx/backer/45/website\" target=\"_blank\"><img src=\"https://opencollective.com/mobx/backer/45/avatar.svg\"></a>\n<a href=\"https://opencollective.com/mobx/backer/46/website\" target=\"_blank\"><img src=\"https://opencollective.com/mobx/backer/46/avatar.svg\"></a>\n<a href=\"https://opencollective.com/mobx/backer/47/website\" target=\"_blank\"><img src=\"https://opencollective.com/mobx/backer/47/avatar.svg\"></a>\n<a href=\"https://opencollective.com/mobx/backer/48/website\" target=\"_blank\"><img src=\"https://opencollective.com/mobx/backer/48/avatar.svg\"></a>\n<a href=\"https://opencollective.com/mobx/backer/49/website\" target=\"_blank\"><img src=\"https://opencollective.com/mobx/backer/49/avatar.svg\"></a>\n<a href=\"https://opencollective.com/mobx/backer/50/website\" target=\"_blank\"><img src=\"https://opencollective.com/mobx/backer/50/avatar.svg\"></a>\n<a href=\"https://opencollective.com/mobx/backer/51/website\" target=\"_blank\"><img src=\"https://opencollective.com/mobx/backer/51/avatar.svg\"></a>\n<a href=\"https://opencollective.com/mobx/backer/52/website\" target=\"_blank\"><img src=\"https://opencollective.com/mobx/backer/52/avatar.svg\"></a>\n<a href=\"https://opencollective.com/mobx/backer/53/website\" target=\"_blank\"><img src=\"https://opencollective.com/mobx/backer/53/avatar.svg\"></a>\n<a href=\"https://opencollective.com/mobx/backer/54/website\" target=\"_blank\"><img src=\"https://opencollective.com/mobx/backer/54/avatar.svg\"></a>\n<a href=\"https://opencollective.com/mobx/backer/55/website\" target=\"_blank\"><img src=\"https://opencollective.com/mobx/backer/55/avatar.svg\"></a>\n<a href=\"https://opencollective.com/mobx/backer/56/website\" target=\"_blank\"><img src=\"https://opencollective.com/mobx/backer/56/avatar.svg\"></a>\n<a href=\"https://opencollective.com/mobx/backer/57/website\" target=\"_blank\"><img src=\"https://opencollective.com/mobx/backer/57/avatar.svg\"></a>\n<a href=\"https://opencollective.com/mobx/backer/58/website\" target=\"_blank\"><img src=\"https://opencollective.com/mobx/backer/58/avatar.svg\"></a>\n<a href=\"https://opencollective.com/mobx/backer/59/website\" target=\"_blank\"><img src=\"https://opencollective.com/mobx/backer/59/avatar.svg\"></a>\n\nOne time donations through paypal are welcome as well and are recorded in the [sponsors](sponsors.md) list.\n\n[![Donate](https://www.paypalobjects.com/en_US/i/btn/btn_donateCC_LG.gif)](https://mobxjs.github.io/mobx/donate.html)\n\n### Sponsors\n\nBecome a sponsor and get your logo on our README on Github with a link to your site. [[Become a sponsor](https://opencollective.com/mobx#sponsor)]\n\n<a href=\"https://opencollective.com/mobx/sponsor/0/website\" target=\"_blank\"><img src=\"https://opencollective.com/mobx/sponsor/0/avatar.svg\"></a>\n<a href=\"https://opencollective.com/mobx/sponsor/1/website\" target=\"_blank\"><img src=\"https://opencollective.com/mobx/sponsor/1/avatar.svg\"></a>\n<a href=\"https://opencollective.com/mobx/sponsor/2/website\" target=\"_blank\"><img src=\"https://opencollective.com/mobx/sponsor/2/avatar.svg\"></a>\n<a href=\"https://opencollective.com/mobx/sponsor/3/website\" target=\"_blank\"><img src=\"https://opencollective.com/mobx/sponsor/3/avatar.svg\"></a>\n<a href=\"https://opencollective.com/mobx/sponsor/4/website\" target=\"_blank\"><img src=\"https://opencollective.com/mobx/sponsor/4/avatar.svg\"></a>\n<a href=\"https://opencollective.com/mobx/sponsor/5/website\" target=\"_blank\"><img src=\"https://opencollective.com/mobx/sponsor/5/avatar.svg\"></a>\n<a href=\"https://opencollective.com/mobx/sponsor/6/website\" target=\"_blank\"><img src=\"https://opencollective.com/mobx/sponsor/6/avatar.svg\"></a>\n<a href=\"https://opencollective.com/mobx/sponsor/7/website\" target=\"_blank\"><img src=\"https://opencollective.com/mobx/sponsor/7/avatar.svg\"></a>\n<a href=\"https://opencollective.com/mobx/sponsor/8/website\" target=\"_blank\"><img src=\"https://opencollective.com/mobx/sponsor/8/avatar.svg\"></a>\n<a href=\"https://opencollective.com/mobx/sponsor/9/website\" target=\"_blank\"><img src=\"https://opencollective.com/mobx/sponsor/9/avatar.svg\"></a>\n<a href=\"https://opencollective.com/mobx/sponsor/10/website\" target=\"_blank\"><img src=\"https://opencollective.com/mobx/sponsor/10/avatar.svg\"></a>\n<a href=\"https://opencollective.com/mobx/sponsor/11/website\" target=\"_blank\"><img src=\"https://opencollective.com/mobx/sponsor/11/avatar.svg\"></a>\n<a href=\"https://opencollective.com/mobx/sponsor/12/website\" target=\"_blank\"><img src=\"https://opencollective.com/mobx/sponsor/12/avatar.svg\"></a>\n<a href=\"https://opencollective.com/mobx/sponsor/13/website\" target=\"_blank\"><img src=\"https://opencollective.com/mobx/sponsor/13/avatar.svg\"></a>\n<a href=\"https://opencollective.com/mobx/sponsor/14/website\" target=\"_blank\"><img src=\"https://opencollective.com/mobx/sponsor/14/avatar.svg\"></a>\n<a href=\"https://opencollective.com/mobx/sponsor/15/website\" target=\"_blank\"><img src=\"https://opencollective.com/mobx/sponsor/15/avatar.svg\"></a>\n<a href=\"https://opencollective.com/mobx/sponsor/16/website\" target=\"_blank\"><img src=\"https://opencollective.com/mobx/sponsor/16/avatar.svg\"></a>\n<a href=\"https://opencollective.com/mobx/sponsor/17/website\" target=\"_blank\"><img src=\"https://opencollective.com/mobx/sponsor/17/avatar.svg\"></a>\n<a href=\"https://opencollective.com/mobx/sponsor/18/website\" target=\"_blank\"><img src=\"https://opencollective.com/mobx/sponsor/18/avatar.svg\"></a>\n<a href=\"https://opencollective.com/mobx/sponsor/19/website\" target=\"_blank\"><img src=\"https://opencollective.com/mobx/sponsor/19/avatar.svg\"></a>\n<a href=\"https://opencollective.com/mobx/sponsor/20/website\" target=\"_blank\"><img src=\"https://opencollective.com/mobx/sponsor/20/avatar.svg\"></a>\n<a href=\"https://opencollective.com/mobx/sponsor/21/website\" target=\"_blank\"><img src=\"https://opencollective.com/mobx/sponsor/21/avatar.svg\"></a>\n<a href=\"https://opencollective.com/mobx/sponsor/22/website\" target=\"_blank\"><img src=\"https://opencollective.com/mobx/sponsor/22/avatar.svg\"></a>\n<a href=\"https://opencollective.com/mobx/sponsor/23/website\" target=\"_blank\"><img src=\"https://opencollective.com/mobx/sponsor/23/avatar.svg\"></a>\n<a href=\"https://opencollective.com/mobx/sponsor/24/website\" target=\"_blank\"><img src=\"https://opencollective.com/mobx/sponsor/24/avatar.svg\"></a>\n<a href=\"https://opencollective.com/mobx/sponsor/25/website\" target=\"_blank\"><img src=\"https://opencollective.com/mobx/sponsor/25/avatar.svg\"></a>\n<a href=\"https://opencollective.com/mobx/sponsor/26/website\" target=\"_blank\"><img src=\"https://opencollective.com/mobx/sponsor/26/avatar.svg\"></a>\n<a href=\"https://opencollective.com/mobx/sponsor/27/website\" target=\"_blank\"><img src=\"https://opencollective.com/mobx/sponsor/27/avatar.svg\"></a>\n<a href=\"https://opencollective.com/mobx/sponsor/28/website\" target=\"_blank\"><img src=\"https://opencollective.com/mobx/sponsor/28/avatar.svg\"></a>\n<a href=\"https://opencollective.com/mobx/sponsor/29/website\" target=\"_blank\"><img src=\"https://opencollective.com/mobx/sponsor/29/avatar.svg\"></a>\n<a href=\"https://opencollective.com/mobx/sponsor/30/website\" target=\"_blank\"><img src=\"https://opencollective.com/mobx/sponsor/30/avatar.svg\"></a>\n<a href=\"https://opencollective.com/mobx/sponsor/31/website\" target=\"_blank\"><img src=\"https://opencollective.com/mobx/sponsor/31/avatar.svg\"></a>\n<a href=\"https://opencollective.com/mobx/sponsor/32/website\" target=\"_blank\"><img src=\"https://opencollective.com/mobx/sponsor/32/avatar.svg\"></a>\n<a href=\"https://opencollective.com/mobx/sponsor/33/website\" target=\"_blank\"><img src=\"https://opencollective.com/mobx/sponsor/33/avatar.svg\"></a>\n<a href=\"https://opencollective.com/mobx/sponsor/34/website\" target=\"_blank\"><img src=\"https://opencollective.com/mobx/sponsor/34/avatar.svg\"></a>\n<a href=\"https://opencollective.com/mobx/sponsor/35/website\" target=\"_blank\"><img src=\"https://opencollective.com/mobx/sponsor/35/avatar.svg\"></a>\n<a href=\"https://opencollective.com/mobx/sponsor/36/website\" target=\"_blank\"><img src=\"https://opencollective.com/mobx/sponsor/36/avatar.svg\"></a>\n<a href=\"https://opencollective.com/mobx/sponsor/37/website\" target=\"_blank\"><img src=\"https://opencollective.com/mobx/sponsor/37/avatar.svg\"></a>\n<a href=\"https://opencollective.com/mobx/sponsor/38/website\" target=\"_blank\"><img src=\"https://opencollective.com/mobx/sponsor/38/avatar.svg\"></a>\n<a href=\"https://opencollective.com/mobx/sponsor/39/website\" target=\"_blank\"><img src=\"https://opencollective.com/mobx/sponsor/39/avatar.svg\"></a>\n<a href=\"https://opencollective.com/mobx/sponsor/40/website\" target=\"_blank\"><img src=\"https://opencollective.com/mobx/sponsor/40/avatar.svg\"></a>\n<a href=\"https://opencollective.com/mobx/sponsor/41/website\" target=\"_blank\"><img src=\"https://opencollective.com/mobx/sponsor/41/avatar.svg\"></a>\n<a href=\"https://opencollective.com/mobx/sponsor/42/website\" target=\"_blank\"><img src=\"https://opencollective.com/mobx/sponsor/42/avatar.svg\"></a>\n<a href=\"https://opencollective.com/mobx/sponsor/43/website\" target=\"_blank\"><img src=\"https://opencollective.com/mobx/sponsor/43/avatar.svg\"></a>\n<a href=\"https://opencollective.com/mobx/sponsor/44/website\" target=\"_blank\"><img src=\"https://opencollective.com/mobx/sponsor/44/avatar.svg\"></a>\n<a href=\"https://opencollective.com/mobx/sponsor/45/website\" target=\"_blank\"><img src=\"https://opencollective.com/mobx/sponsor/45/avatar.svg\"></a>\n<a href=\"https://opencollective.com/mobx/sponsor/46/website\" target=\"_blank\"><img src=\"https://opencollective.com/mobx/sponsor/46/avatar.svg\"></a>\n<a href=\"https://opencollective.com/mobx/sponsor/47/website\" target=\"_blank\"><img src=\"https://opencollective.com/mobx/sponsor/47/avatar.svg\"></a>\n<a href=\"https://opencollective.com/mobx/sponsor/48/website\" target=\"_blank\"><img src=\"https://opencollective.com/mobx/sponsor/48/avatar.svg\"></a>\n<a href=\"https://opencollective.com/mobx/sponsor/49/website\" target=\"_blank\"><img src=\"https://opencollective.com/mobx/sponsor/49/avatar.svg\"></a>\n<a href=\"https://opencollective.com/mobx/sponsor/50/website\" target=\"_blank\"><img src=\"https://opencollective.com/mobx/sponsor/50/avatar.svg\"></a>\n<a href=\"https://opencollective.com/mobx/sponsor/51/website\" target=\"_blank\"><img src=\"https://opencollective.com/mobx/sponsor/51/avatar.svg\"></a>\n<a href=\"https://opencollective.com/mobx/sponsor/52/website\" target=\"_blank\"><img src=\"https://opencollective.com/mobx/sponsor/52/avatar.svg\"></a>\n<a href=\"https://opencollective.com/mobx/sponsor/53/website\" target=\"_blank\"><img src=\"https://opencollective.com/mobx/sponsor/53/avatar.svg\"></a>\n<a href=\"https://opencollective.com/mobx/sponsor/54/website\" target=\"_blank\"><img src=\"https://opencollective.com/mobx/sponsor/54/avatar.svg\"></a>\n<a href=\"https://opencollective.com/mobx/sponsor/55/website\" target=\"_blank\"><img src=\"https://opencollective.com/mobx/sponsor/55/avatar.svg\"></a>\n<a href=\"https://opencollective.com/mobx/sponsor/56/website\" target=\"_blank\"><img src=\"https://opencollective.com/mobx/sponsor/56/avatar.svg\"></a>\n<a href=\"https://opencollective.com/mobx/sponsor/57/website\" target=\"_blank\"><img src=\"https://opencollective.com/mobx/sponsor/57/avatar.svg\"></a>\n<a href=\"https://opencollective.com/mobx/sponsor/58/website\" target=\"_blank\"><img src=\"https://opencollective.com/mobx/sponsor/58/avatar.svg\"></a>\n<a href=\"https://opencollective.com/mobx/sponsor/59/website\" target=\"_blank\"><img src=\"https://opencollective.com/mobx/sponsor/59/avatar.svg\"></a>\n",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git+https://github.com/mobxjs/mobx.git"
  },
  "scripts": {
    "_prepublish": "npm run small-build",
    "lint": "eslint src/*.ts src/types/*.ts src/api/*.ts src/core/*.ts src/utils/*.ts",
    "precommit": "lint-staged",
    "prettier": "prettier --write --print-width 100 --tab-width 4 --no-semi \"**/*.js\" \"**/*.jsx\" \"**/*.tsx\" \"**/*.ts\"",
    "publish-script": "node scripts/publish.js",
    "quick-build": "tsc --pretty",
    "size": "size-limit --babili 20KB lib/mobx.js",
    "small-build": "node scripts/build.js",
    "test": "jest",
    "test:all": "yarn lint && yarn small-build && yarn jest -i && yarn test:flow && yarn test:mixed-versions",
    "test:flow": "flow check",
    "test:mixed-versions": "jest --testRegex mixed-versions",
    "test:performance": "npm run small-build && PERSIST=true time node --expose-gc test/perf/index.js",
    "test:travis": "yarn test:all && yarn test:performance && yarn test -i --coverage && yarn test:webpack && yarn size",
    "test:webpack": "node scripts/webpack-regression-tests.js",
    "watch": "jest --watch"
  },
  "typings": "lib/mobx.d.ts",
  "umd:main": "lib/mobx.umd.js",
  "unpkg": "lib/mobx.umd.min.js",
  "version": "5.9.4"
}
